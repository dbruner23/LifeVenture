{"ast":null,"code":"import * as UploadApi from '../api/UploadRequest.js';\nexport const uploadImage = data => async dispatch => {\n  dispatch({\n    type: \"UPLOAD_START\"\n  });\n\n  try {\n    const newImg = await UploadApi.uploadImage(data);\n    dispatch({\n      type: \"UPLOAD_SUCCESS\",\n      data: newImg.data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: \"UPLOAD_FAIL\"\n    });\n  }\n};\nexport const uploadPost = data => async dispatch => {\n  dispatch({\n    type: \"UPLOAD_START\"\n  });\n\n  try {\n    const newPost = await UploadApi.uploadPost(data);\n    dispatch({\n      type: \"UPLOAD_SUCCESS\",\n      data: newPost.data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: \"UPLOAD_FAIL\"\n    });\n  }\n};","map":{"version":3,"sources":["/Users/davidbruner/Documents/Programming/Mission Ready Code/LifeVenture/client/src/actions/uploadAction.js"],"names":["UploadApi","uploadImage","data","dispatch","type","newImg","error","console","log","uploadPost","newPost"],"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,yBAA3B;AAEA,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU,MAAMC,QAAN,IAAmB;AACpDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR;;AAEA,MAAI;AACA,UAAMC,MAAM,GAAG,MAAML,SAAS,CAACC,WAAV,CAAsBC,IAAtB,CAArB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,gBAAR;AAA0BF,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAAvC,KAAD,CAAR;AACH,GAHD,CAGE,OAAOI,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACH;AACJ,CAVM;AAYP,OAAO,MAAMK,UAAU,GAAIP,IAAD,IAAU,MAAMC,QAAN,IAAmB;AACnDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAE;AAAP,GAAD,CAAR;;AAEA,MAAI;AACA,UAAMM,OAAO,GAAG,MAAMV,SAAS,CAACS,UAAV,CAAqBP,IAArB,CAAtB;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE,gBAAP;AAAyBF,MAAAA,IAAI,EAAEQ,OAAO,CAACR;AAAvC,KAAD,CAAR;AACH,GAHD,CAGE,OAAOI,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAH,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACH;AACJ,CAVM","sourcesContent":["import * as UploadApi from '../api/UploadRequest.js'\n\nexport const uploadImage = (data) => async(dispatch) => {\n    dispatch({ type: \"UPLOAD_START\" })\n    \n    try {\n        const newImg = await UploadApi.uploadImage(data)\n        dispatch({ type: \"UPLOAD_SUCCESS\", data: newImg.data})\n    } catch (error) {\n        console.log(error)\n        dispatch({ type: \"UPLOAD_FAIL\" })\n    }\n}\n\nexport const uploadPost = (data) => async(dispatch) => {\n    dispatch({type: \"UPLOAD_START\"})\n\n    try {\n        const newPost = await UploadApi.uploadPost(data)\n        dispatch({type: \"UPLOAD_SUCCESS\", data: newPost.data})\n    } catch (error) {\n        console.log(error)\n        dispatch({type: \"UPLOAD_FAIL\"})\n    }\n}"]},"metadata":{},"sourceType":"module"}