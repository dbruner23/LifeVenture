{"ast":null,"code":"import * as UploadApi from '../api/UploadRequest.js';\nexport const uploadImage = data => async dispatch => {\n  try {\n    console.log(\"Image upload Action start.\");\n    await UploadApi.uploadImage(data);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const uploadPost = data => async dispatch => {\n  dispatch({\n    type: \"UPLOAD_START\"\n  });\n\n  try {\n    const newPost = await UploadApi.uploadPost(data);\n    dispatch({\n      type: \"UPLOAD_SUCCESS\",\n      data: newPost.data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: \"UPLOAD_FAIL\"\n    });\n  }\n};","map":{"version":3,"sources":["/Users/davidbruner/Documents/Programming/Mission Ready Code/LifeVenture/client/src/actions/uploadAction.js"],"names":["UploadApi","uploadImage","data","dispatch","console","log","error","uploadPost","type","newPost"],"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,yBAA3B;AAEA,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU,MAAMC,QAAN,IAAmB;AAEpD,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,UAAML,SAAS,CAACC,WAAV,CAAsBC,IAAtB,CAAN;AACH,GAHD,CAGE,OAAOI,KAAP,EAAc;AACZF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH;AACJ,CARM;AAUP,OAAO,MAAMC,UAAU,GAAIL,IAAD,IAAU,MAAMC,QAAN,IAAmB;AACnDA,EAAAA,QAAQ,CAAC;AAACK,IAAAA,IAAI,EAAE;AAAP,GAAD,CAAR;;AAEA,MAAI;AACA,UAAMC,OAAO,GAAG,MAAMT,SAAS,CAACO,UAAV,CAAqBL,IAArB,CAAtB;AACAC,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAE,gBAAP;AAAyBN,MAAAA,IAAI,EAAEO,OAAO,CAACP;AAAvC,KAAD,CAAR;AACH,GAHD,CAGE,OAAOI,KAAP,EAAc;AACZF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACAH,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACH;AACJ,CAVM","sourcesContent":["import * as UploadApi from '../api/UploadRequest.js'\n\nexport const uploadImage = (data) => async(dispatch) => {\n    \n    try {\n        console.log(\"Image upload Action start.\")\n        await UploadApi.uploadImage(data)\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const uploadPost = (data) => async(dispatch) => {\n    dispatch({type: \"UPLOAD_START\"})\n\n    try {\n        const newPost = await UploadApi.uploadPost(data)\n        dispatch({type: \"UPLOAD_SUCCESS\", data: newPost.data})\n    } catch (error) {\n        console.log(error)\n        dispatch({type: \"UPLOAD_FAIL\"})\n    }\n}"]},"metadata":{},"sourceType":"module"}